name: Build Linux Repository

on:
  push:
    branches:
      - main  # Adjust branch name as needed
  pull_request:
    branches:
      - main  # Adjust branch name as needed

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu as the runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Action to checkout the repository

    - name: Set up SSH for GitHub Actions
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
QyNTUxOQAAACDE10qmH606sk8o8s22o+/v4B9OJmEvHTNkPRjqDBTmtwAAAKhPAdILTwHS
CwAAAAtzc2gtZWQyNTUxOQAAACDE10qmH606sk8o8s22o+/v4B9OJmEvHTNkPRjqDBTmtw
AAAECekWPpzKXNMhHOfLK2BsrfV3ApNtTje+ah2Fx3bko6s8TXSqYfrTqyTyjyzbaj7+/g
H04mYS8dM2Q9GOoMFOa3AAAAJWRldm9wc0BkZXZvcHMtVk13YXJlLVZpcnR1YWwtUGxhdG
Zvcm0=
 }}
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev

    - name: Build Debian package
      run: |
        # Replace with your build commands to create .deb packages
        mkdir build_dir
        cp path/to/your/package/*.deb build_dir/

    - name: Prepare repository structure
      run: |
        mkdir -p myrepo/dists/stable/main
        cp -r build_dir/* myrepo/deb-packages/

    - name: Generate repository metadata
      run: |
        cd myrepo
        apt-ftparchive packages ./deb-packages > dists/stable/main/binary-Packages
        gzip -c dists/stable/main/binary-Packages > dists/stable/main/binary-Packages.gz
        cat <<EOF > dists/stable/Release
        Origin: YourRepositoryName
        Label: YourRepositoryLabel
        Suite: stable
        Codename: stable
        Architectures: amd64 i386
        Components: main
        Description: Your repository description
        EOF
        gpg --output dists/stable/Release.gpg -ba dists/stable/Release

   
